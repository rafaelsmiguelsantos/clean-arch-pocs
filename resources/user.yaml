openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
paths:
  /user/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequestDTO'
      responses:
        '201':
          description: Successful registration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDTO'
        '400':
          description: Bad Request - Validation Errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
              examples:  # <-- Adicionando os exemplos aqui
                EmptyFirstName:
                  value:
                    message: "First name cannot be empty."
                    error: "Bad Request"
                    statusCode: 400
                LongFirstName:
                  value:
                    message: "First name is too long."
                    error: "Bad Request"
                    statusCode: 400
                EmptyLastName:
                  value:
                    message: "Last name cannot be empty."
                    error: "Bad Request"
                    statusCode: 400
                LongLastName:
                  value:
                    message: "Last name is too long."
                    error: "Bad Request"
                    statusCode: 400
                MissingFields:
                  value:
                    message: "Some required fields are missing."
                    error: "Bad Request"
                    statusCode: 400
                InvalidEmail:
                  value:
                    message: "Invalid email format."
                    error: "Bad Request"
                    statusCode: 400
        '409':
          description: Conflict - user already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '500':
          description: Internal Server Error

components:
  schemas:
    UserRequestDTO:
      type: object
      required:
        - firstName
        - lastName
        - email
      properties:
        firstName:
          type: string
          description: First name of the user
          minLength: 1
          maxLength: 50
        lastName:
          type: string
          description: Last name of the user
          minLength: 1
          maxLength: 50
        middleName:
          type: string
          description: Middle name of the user (optional)
          maxLength: 50
        email:
          type: string
          description: Email of the user
          format: email
    UserDTO:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        email:
          type: string
          format: email
        _id:
          type: string
          description: MongoDB ID
    BadRequestResponse:
      type: object
      properties:
        message:
          type: string
          description: Detailed validation error message.
        error:
          type: string
          description: Error type.
        statusCode:
          type: integer
          description: HTTP status code for the error.
    ConflictResponse:
      type: object
      properties:
        message:
          type: string
          example: "User already exists"
        error:
          type: string
          example: "Conflict"
        statusCode:
          type: integer
          example: 409
